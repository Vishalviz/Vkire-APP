name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  NODE_VERSION: '20'
  EXPO_VERSION: 'latest'

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Install dependencies
        run: |
          cd VKApp
          npm ci

      - name: Run ESLint
        run: |
          cd VKApp
          npm run lint

      - name: Run TypeScript check
        run: |
          cd VKApp
          npx tsc --noEmit

      - name: Run tests
        run: |
          cd VKApp
          npm test -- --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: VKApp/coverage

  build-apps:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    strategy:
      matrix:
        platform: [android, ios, web]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Install dependencies
        run: |
          cd VKApp
          npm ci

      - name: Install Expo CLI
        run: npm install -g @expo/cli

      - name: Setup Expo
        run: |
          cd VKApp
          npx expo install

      - name: Build for ${{ matrix.platform }}
        run: |
          cd VKApp
          if [ "${{ matrix.platform }}" = "web" ]; then
            npx expo export --platform web
          else
            npx expo build:${{ matrix.platform }} --non-interactive
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.platform }}
          path: VKApp/dist
          if-no-files-found: ignore

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd VKApp
          npm ci

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=VKApp/package.json

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-apps, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-web
          path: VKApp/dist

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-apps, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-web
          path: VKApp/dist

      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
