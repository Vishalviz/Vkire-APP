name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  EXPO_VERSION: 'latest'

jobs:
  # Lint and Type Check
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Run ESLint
        working-directory: ./VKApp
        run: npm run lint

      - name: Run TypeScript check
        working-directory: ./VKApp
        run: npm run type-check

  # Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Run tests
        working-directory: ./VKApp
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./VKApp/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Build and Test Expo App
  build-expo:
    name: Build Expo App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Cache Expo
        uses: actions/cache@v3
        with:
          path: |
            ~/.expo
            VKApp/.expo
          key: ${{ runner.os }}-expo-${{ hashFiles('VKApp/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-expo-

      - name: Build for Android
        working-directory: ./VKApp
        run: |
          npx expo build:android --type apk --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build for iOS
        working-directory: ./VKApp
        run: |
          npx expo build:ios --type simulator --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Run security audit
        working-directory: ./VKApp
        run: npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

  # Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test, build-expo, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Deploy to Expo
        working-directory: ./VKApp
        run: |
          npx expo publish --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test, build-expo, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: VKApp/package-lock.json

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        working-directory: ./VKApp
        run: npm ci

      - name: Build production APK
        working-directory: ./VKApp
        run: |
          npx expo build:android --type apk --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build production iOS
        working-directory: ./VKApp
        run: |
          npx expo build:ios --type archive --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Deploy to Expo
        working-directory: ./VKApp
        run: |
          npx expo publish --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload to App Store Connect
        uses: apple-actions/upload-app-store@v1
        with:
          app-path: ${{ github.workspace }}/VKApp/build/ios/VKApp.ipa
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-issuer-id: ${{ secrets.APPLE_ISSUER_ID }}

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.vkapp.app
          releaseFiles: ${{ github.workspace }}/VKApp/build/android/VKApp.apk
          track: production

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
