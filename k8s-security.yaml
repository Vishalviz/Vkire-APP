apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vkapp-network-policy
  namespace: vkapp
spec:
  podSelector:
    matchLabels:
      app: vkapp
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          app: vkapp
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: vkapp
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: vkapp
    ports:
    - protocol: TCP
      port: 6379
---
apiVersion: v1
kind: Secret
metadata:
  name: vkapp-secrets-prod
  namespace: vkapp
type: Opaque
data:
  # Base64 encoded values (use: echo -n "value" | base64)
  SUPABASE_URL: U1VQQkFTRV9VUkw=  # SUPABASE_URL
  SUPABASE_ANON_KEY: U1VQQkFTRV9BTk9OX0tFWQ==  # SUPABASE_ANON_KEY
  JWT_SECRET: SldUX1NFQ1JFVA==  # JWT_SECRET
  ENCRYPTION_KEY: RU5DUllQVElPTl9LRVk=  # ENCRYPTION_KEY
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vkapp-security-config
  namespace: vkapp
data:
  security.yaml: |
    security:
      cors:
        enabled: true
        origins: ["http://localhost:3000", "http://localhost:8080"]
      rate_limiting:
        enabled: true
        requests_per_minute: 100
      headers:
        X-Frame-Options: DENY
        X-Content-Type-Options: nosniff
        X-XSS-Protection: "1; mode=block"
        Strict-Transport-Security: "max-age=31536000; includeSubDomains"
