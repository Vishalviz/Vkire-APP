apiVersion: apps/v1
kind: Deployment
metadata:
  name: vkapp-deployment
  namespace: vkapp
  labels:
    app: vkapp
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vkapp
  template:
    metadata:
      labels:
        app: vkapp
        version: v1.0.0
    spec:
      containers:
      - name: vkapp
        image: your-registry.com/vkapp:latest
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: vkapp-config
              key: NODE_ENV
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: vkapp-config
              key: APP_NAME
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: vkapp-config
              key: LOG_LEVEL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: vkapp-config
              key: REDIS_URL
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: SUPABASE_URL
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: SUPABASE_ANON_KEY
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: SUPABASE_SERVICE_ROLE_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: STRIPE_SECRET_KEY
        - name: RAZORPAY_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: RAZORPAY_KEY_SECRET
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: JWT_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: vkapp-secrets
              key: ENCRYPTION_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: vkapp-service
  namespace: vkapp
  labels:
    app: vkapp
spec:
  selector:
    app: vkapp
  ports:
  - name: http
    port: 80
    targetPort: 8081
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vkapp-ingress
  namespace: vkapp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - vkapp.example.com
    secretName: vkapp-tls
  rules:
  - host: vkapp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vkapp-service
            port:
              number: 80
